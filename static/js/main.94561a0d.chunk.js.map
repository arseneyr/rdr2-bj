{"version":3,"sources":["bj.worker.js","blackjack_rules.ts","EntryPad.tsx","CardEntry.tsx","ResultDisplay.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["module","exports","Worker","__webpack_require__","p","Card","add_card","hand_value","card","ret","Object","objectSpread","value","soft","Ace","all_valid","fromEntries","values","filter","c","map","get_unbusting_cards","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","undefined","_step2","_iterator2","Symbol","iterator","next","done","err","return","get_valid_cards","cards","deck","Map","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","set","get","Array","from","entries","_ref","_ref2","slicedToArray","v","Ten","get_ev_max","ev","Math","max","apply","toConsumableArray","n","isNaN","array","chunk_size","grouped_cards","x","sort","a","b","slice","ceil","length","fill","_","index","begin","borderStyle","useStyles","makeStyles","root","display","flexDirection","borderRight","borderBottom","row","flex","button","borderTop","borderLeft","transition","icon","fontSize","disabledButton","color","EntryPad","onCardClick","onBackspaceClick","onSubmitClick","props","objectWithoutProperties","classes","react_default","createElement","className","i","key","ButtonBase","disabled","cardsEnabled","onClick","useCallback","Typography","variant","backspaceEnabled","BackspaceTwoTone","style","borderSpacing","submitEnabled","CheckCircleTwoTone","labelContainer","marginRight","cardContainer","& > *","minWidth","wordBreak","@keyframes blink","backgroundColor","to","50%","cursor","animation","card_arry_to_string","join","CardEntry","hand","dealer","other","active","alignItems","margin","results","& > :first-child","paddingLeft","& > $selected","borderTopLeftRadius","borderBottomLeftRadius","& > :last-child","textAlign","whiteSpace","paddingRight","borderTopRightRadius","borderBottomRightRadius","verticalContainer","selected","insuranceDiv","ev_to_string","num","toFixed","abs","padEnd","ResultDisplay","result","insurance","stand","hit","double","split","concat","EntryStage","ActionType","height","entryPad","position","displayInner","justifyContent","font","reset","bottom","right","instructions","progressDiv","width","fullScreen","window","navigator","standalone","initialState","entry_stage","Start","removed_cards","hit_card","get_current_card_array","state","Hand","Dealer","RemovedCards","Hit","reducer","action","produce","draft","card_array","type","CardButton","push","payload","Backspace","pop","Submit","Working","Reset","Result","ChooseSplit","Done","reduce","acc","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","get_hand_value","App","worker","useRef","_useState","useState","_useState2","progress","setProgress","_useReducer","useReducer","_useReducer2","dispatch","useEffect","current","terminate","onmessage","data","postMessage","dealer_card","submit_disabled","cards_enabled","_len","arguments","valid_maps","_key","m","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","Fragment","reset_callback","console","log","align","CircularProgress","round","Button","Replay","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.94561a0d.chunk.js","sourcesContent":["module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"2b2dea17bfe6d9f9c0ce.worker.js\");\n};","export enum Card {\r\n  Ace = 1,\r\n  Two = 2,\r\n  Three = 3,\r\n  Four = 4,\r\n  Five = 5,\r\n  Six = 6,\r\n  Seven = 7,\r\n  Eight = 8,\r\n  Nine = 9,\r\n  Ten = 10\r\n}\r\n\r\nexport interface HandValue {\r\n  soft: boolean;\r\n  value: number;\r\n}\r\n\r\nexport function add_card(hand_value: HandValue, card: Card) {\r\n  const ret = { ...hand_value };\r\n  ret.value += card;\r\n  if (ret.soft && ret.value > 21) {\r\n    ret.soft = false;\r\n    ret.value -= 10;\r\n  } else if (!ret.soft && card === Card.Ace && ret.value <= 10) {\r\n    ret.soft = true;\r\n    ret.value += 10;\r\n  }\r\n  return ret;\r\n}\r\n\r\nexport function get_hand_value(cards: Card[]) {\r\n  let ret = { soft: false, value: 0 };\r\n  for (const card of cards) {\r\n    ret = add_card(ret, card);\r\n  }\r\n  return ret;\r\n}\r\n\r\ninterface ValidMap {\r\n  [index: number]: boolean;\r\n}\r\n\r\nconst all_valid = Object.fromEntries(\r\n  Object.values(Card)\r\n    .filter(c => typeof c === \"number\")\r\n    .map(c => [c, true])\r\n);\r\n\r\nexport function get_unbusting_cards(hand_value: HandValue) {\r\n  const ret: ValidMap = {};\r\n  for (const card of Object.values(Card).filter(\r\n    c => typeof c === \"number\"\r\n  ) as Card[]) {\r\n    if (add_card(hand_value, card).value <= 21) {\r\n      ret[card] = true;\r\n    }\r\n  }\r\n  return ret;\r\n}\r\n\r\nexport function get_valid_cards(cards: Card[]) {\r\n  const deck: Map<number, number> = new Map(\r\n    Object.values(Card)\r\n      .filter(c => typeof c === \"number\")\r\n      .map(c => [c, 0])\r\n  );\r\n  for (const card of cards) {\r\n    deck.set(card, deck.get(card)! + 1);\r\n  }\r\n  return Object.fromEntries(\r\n    Array.from(deck.entries()).map(([c, v]) => [\r\n      c,\r\n      c === Card.Ten ? v < 16 : v < 4\r\n    ])\r\n  );\r\n}\r\n\r\nexport function merge_valid_maps(...valid_maps: ValidMap[]) {\r\n  return valid_maps.reduce(\r\n    (acc, m) => {\r\n      for (const card of Object.values(Card).filter(\r\n        c => typeof c === \"number\"\r\n      )) {\r\n        if (!m[card]) {\r\n          acc[card] = false;\r\n        }\r\n      }\r\n      return acc;\r\n    },\r\n    { ...all_valid }\r\n  );\r\n}\r\n\r\nexport function take_insurance(cards: Card[]) {\r\n  const num_tens = cards.reduce(\r\n    (acc, c) => (c === Card.Ten ? acc + 1 : acc),\r\n    0\r\n  );\r\n  return (16 - num_tens) / (52 - cards.length);\r\n}\r\n\r\nexport interface ExpectedValues {\r\n  stand: number;\r\n  hit?: number;\r\n  split?: number;\r\n  double?: number;\r\n}\r\n\r\nexport function get_ev_max(ev: ExpectedValues) {\r\n  return Math.max(...Object.values(ev).filter(n => !isNaN(n)));\r\n}\r\n","import React, { useCallback } from \"react\";\r\nimport { makeStyles, ButtonBase, Typography } from \"@material-ui/core\";\r\nimport { Card } from \"./blackjack_rules\";\r\nimport { BackspaceTwoTone, CheckCircleTwoTone } from \"@material-ui/icons\";\r\n\r\nconst array_chunks = (array: any[], chunk_size: number) =>\r\n  Array(Math.ceil(array.length / chunk_size))\r\n    .fill(0)\r\n    .map((_, index) => index * chunk_size)\r\n    .map(begin => array.slice(begin, begin + chunk_size));\r\nconst grouped_cards = array_chunks(\r\n  Object.values(Card)\r\n    .filter(x => typeof x === \"number\")\r\n    .sort((a, b) => a - b)\r\n    .slice(0, 9),\r\n  3\r\n);\r\n\r\nconst borderStyle = \"4px solid rgba(255,171,0, 0.2)\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    borderRight: borderStyle,\r\n    borderBottom: borderStyle\r\n  },\r\n  row: {\r\n    display: \"flex\",\r\n    flex: \"1 0 0\"\r\n  },\r\n  button: {\r\n    flex: \"1 0 0\",\r\n    borderTop: borderStyle,\r\n    borderLeft: borderStyle,\r\n    transition: \"color .1s\"\r\n  },\r\n  icon: {\r\n    fontSize: \"4rem\"\r\n  },\r\n  disabledButton: {\r\n    color: \"rgba(255,171,0, 0.2)\"\r\n  }\r\n});\r\n\r\ninterface Props {\r\n  onCardClick: (card: Card) => void;\r\n  cardsEnabled: { [index: number]: boolean };\r\n  onBackspaceClick: () => void;\r\n  backspaceEnabled: boolean;\r\n  onSubmitClick: () => void;\r\n  submitEnabled: boolean;\r\n  classes: any;\r\n}\r\n\r\nexport default function EntryPad({\r\n  onCardClick,\r\n  onBackspaceClick,\r\n  onSubmitClick,\r\n  ...props\r\n}: Props) {\r\n  const classes = useStyles(props);\r\n  return (\r\n    <div className={classes.root}>\r\n      {grouped_cards.map((row, i) => (\r\n        <div className={classes.row} key={i}>\r\n          {row.map(v => (\r\n            <ButtonBase\r\n              className={classes.button}\r\n              classes={{ disabled: classes.disabledButton }}\r\n              key={v}\r\n              disabled={!props.cardsEnabled[v]}\r\n              // eslint-disable-next-line react-hooks/rules-of-hooks, react-hooks/exhaustive-deps\r\n              onClick={useCallback(() => onCardClick(v), [onCardClick])}\r\n            >\r\n              <Typography variant=\"h3\">{v === 1 ? \"A\" : v}</Typography>\r\n            </ButtonBase>\r\n          ))}\r\n        </div>\r\n      ))}\r\n      <div className={classes.row}>\r\n        <ButtonBase\r\n          className={classes.button}\r\n          classes={{ disabled: classes.disabledButton }}\r\n          key=\"delete\"\r\n          onClick={onBackspaceClick}\r\n          disabled={!props.backspaceEnabled}\r\n        >\r\n          <BackspaceTwoTone className={classes.icon} />\r\n        </ButtonBase>\r\n        <ButtonBase\r\n          className={classes.button}\r\n          classes={{ disabled: classes.disabledButton }}\r\n          key={10}\r\n          disabled={!props.cardsEnabled[10]}\r\n          onClick={useCallback(() => onCardClick(10), [onCardClick])}\r\n        >\r\n          <Typography variant=\"h3\" style={{ fontSize: \"2rem\" }}>\r\n            <table style={{ borderSpacing: \"4px\" }}>\r\n              <tbody>\r\n                <tr>\r\n                  <td>10</td>\r\n                  <td>J</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Q</td>\r\n                  <td>K</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </Typography>\r\n        </ButtonBase>\r\n        <ButtonBase\r\n          className={classes.button}\r\n          classes={{ disabled: classes.disabledButton }}\r\n          key=\"submit\"\r\n          onClick={onSubmitClick}\r\n          disabled={!props.submitEnabled}\r\n        >\r\n          <CheckCircleTwoTone className={classes.icon} />\r\n        </ButtonBase>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { Card } from \"./blackjack_rules\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: \"flex\"\r\n  },\r\n  labelContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    marginRight: 8\r\n  },\r\n  cardContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    \"& > *\": {\r\n      minWidth: 0,\r\n      wordBreak: \"break-word\"\r\n    }\r\n  },\r\n  \"@keyframes blink\": {\r\n    from: { backgroundColor: \"transparent\" },\r\n    to: { backgroundColor: \"transparent\" },\r\n    \"50%\": {\r\n      backgroundColor: \"#ffab00\"\r\n    }\r\n  },\r\n  cursor: {\r\n    animation: \".8s $blink ease infinite\"\r\n  }\r\n});\r\n\r\ninterface Props {\r\n  hand: Card[];\r\n  dealer: Card[];\r\n  other: Card[];\r\n  active?: \"hand\" | \"dealer\" | \"other\";\r\n}\r\n\r\nfunction card_arry_to_string(cards: Card[]) {\r\n  return cards.map(c => (c === 1 ? \"A\" : c)).join(\" \") + \" \";\r\n}\r\n\r\nexport default function({ hand, dealer, other, active }: Props) {\r\n  const classes = useStyles();\r\n  const cursor = <span className={classes.cursor}>&nbsp;</span>;\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.labelContainer}>\r\n        <div>Hand</div>\r\n        <div>Dealer</div>\r\n        <div>Other</div>\r\n      </div>\r\n      <div className={classes.cardContainer}>\r\n        <div>\r\n          {card_arry_to_string(hand)}\r\n          {active === \"hand\" && cursor}\r\n        </div>\r\n        <div>\r\n          {card_arry_to_string(dealer)}\r\n          {active === \"dealer\" && cursor}\r\n        </div>\r\n        <div>\r\n          {card_arry_to_string(other)}\r\n          {active === \"other\" && cursor}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { ExpectedValues, get_ev_max } from \"./blackjack_rules\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-end\",\r\n    margin: \"0px 8px\",\r\n    flex: \"1 0 auto\"\r\n  },\r\n  results: {\r\n    display: \"flex\",\r\n    \"& > :first-child\": {\r\n      alignItems: \"flex-end\",\r\n      \"& > *\": {\r\n        borderRight: \"4px solid transparent\",\r\n        paddingLeft: 8\r\n      },\r\n      \"& > $selected\": {\r\n        borderTopLeftRadius: 10,\r\n        borderBottomLeftRadius: 10\r\n      }\r\n    },\r\n    \"& > :last-child\": {\r\n      textAlign: \"left\",\r\n      whiteSpace: \"pre\",\r\n      \"& > *\": {\r\n        paddingRight: 8\r\n      },\r\n      \"& > $selected\": {\r\n        borderTopRightRadius: 10,\r\n        borderBottomRightRadius: 10\r\n      }\r\n    }\r\n  },\r\n  verticalContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n  },\r\n  selected: {\r\n    backgroundColor: \"#ffab00\",\r\n    color: \"black\"\r\n  },\r\n  insuranceDiv: {\r\n    paddingRight: 8\r\n  }\r\n});\r\n\r\ninterface Props {\r\n  result: ExpectedValues | null;\r\n  insurance: boolean | null;\r\n}\r\n\r\nfunction ev_to_string(value: number) {\r\n  let num = (value * 100).toFixed(2);\r\n  const padding =\r\n    Math.abs(value * 100) < 10 ? \"  \" : Math.abs(value * 100) < 100 ? \" \" : \"\";\r\n  return (padding + (value < 0 ? \"\" : \"+\") + num).padEnd(7, \"0\") + \"%\";\r\n}\r\n\r\nexport default function ResultDisplay({ result, insurance }: Props) {\r\n  const classes = useStyles();\r\n  const max = result && get_ev_max(result);\r\n  return (\r\n    <div className={classes.root}>\r\n      {result && (\r\n        <div className={classes.results}>\r\n          <div className={classes.verticalContainer}>\r\n            <div\r\n              className={max === result.stand ? classes.selected : undefined}\r\n            >\r\n              Stand:\r\n            </div>\r\n            {result.hit && (\r\n              <div\r\n                className={max === result.hit ? classes.selected : undefined}\r\n              >\r\n                Hit:\r\n              </div>\r\n            )}\r\n            {result.double && (\r\n              <div\r\n                className={max === result.double ? classes.selected : undefined}\r\n              >\r\n                Double:\r\n              </div>\r\n            )}\r\n            {result.split && (\r\n              <div\r\n                className={max === result.split ? classes.selected : undefined}\r\n              >\r\n                Split:\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className={classes.verticalContainer}>\r\n            <div\r\n              className={max === result.stand ? classes.selected : undefined}\r\n            >\r\n              {ev_to_string(result.stand)}\r\n            </div>\r\n            {result.hit && (\r\n              <div\r\n                className={max === result.hit ? classes.selected : undefined}\r\n              >\r\n                {ev_to_string(result.hit)}\r\n              </div>\r\n            )}\r\n            {result.double && (\r\n              <div\r\n                className={max === result.double ? classes.selected : undefined}\r\n              >\r\n                {ev_to_string(result.double)}\r\n              </div>\r\n            )}\r\n            {result.split && (\r\n              <div\r\n                className={max === result.split ? classes.selected : undefined}\r\n              >\r\n                {ev_to_string(result.split)}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n      {insurance !== null && (\r\n        <div className={classes.insuranceDiv}>{`${\r\n          insurance ? \"Take\" : \"Skip\"\r\n        } insurance`}</div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, {\r\n  useEffect,\r\n  useState,\r\n  useRef,\r\n  useReducer,\r\n  useCallback\r\n} from \"react\";\r\nimport {\r\n  CircularProgress,\r\n  Typography,\r\n  Button,\r\n  makeStyles\r\n} from \"@material-ui/core\";\r\nimport { Replay } from \"@material-ui/icons\";\r\nimport { produce } from \"immer\";\r\n\r\nimport Worker from \"./bj.worker.js\";\r\nimport {\r\n  Card,\r\n  HandValue,\r\n  get_hand_value,\r\n  merge_valid_maps,\r\n  get_valid_cards,\r\n  get_unbusting_cards,\r\n  take_insurance,\r\n  ExpectedValues,\r\n  get_ev_max\r\n} from \"./blackjack_rules\";\r\nimport EntryPad from \"./EntryPad\";\r\nimport CardEntry from \"./CardEntry\";\r\nimport ResultDisplay from \"./ResultDisplay\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    height: \"100%\",\r\n    color: \"#ffab00\",\r\n    backgroundColor: \"black\"\r\n  },\r\n  entryPad: {\r\n    flex: \"7 0 0\"\r\n  },\r\n  display: {\r\n    flex: \"3 0 0\",\r\n    position: \"relative\"\r\n  },\r\n  displayInner: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    font: `0.8em \"Roboto Mono\"`,\r\n    paddingLeft: 8\r\n  },\r\n  reset: {\r\n    position: \"absolute\",\r\n    bottom: 8,\r\n    right: 8\r\n  },\r\n  instructions: {\r\n    margin: \"8px 0px\"\r\n  },\r\n  progressDiv: {\r\n    width: 136,\r\n    height: 48,\r\n    paddingLeft: 16,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  }\r\n});\r\n\r\nconst fullScreen = (window.navigator as any).standalone as boolean;\r\n\r\nenum EntryStage {\r\n  Start,\r\n  Hand,\r\n  Dealer,\r\n  RemovedCards,\r\n  Working,\r\n  Done,\r\n  Hit,\r\n  ChooseSplit\r\n}\r\nenum ActionType {\r\n  CardButton,\r\n  Backspace,\r\n  Submit,\r\n  Reset,\r\n  Result\r\n}\r\ninterface BaseAction {\r\n  type: ActionType.Backspace | ActionType.Submit | ActionType.Reset;\r\n}\r\n\r\ninterface CardAction {\r\n  type: ActionType.CardButton;\r\n  payload: Card;\r\n}\r\ninterface ResultAction {\r\n  type: ActionType.Result;\r\n  payload: ExpectedValues;\r\n}\r\n\r\ntype Action = BaseAction | CardAction | ResultAction;\r\n\r\ninterface State {\r\n  entry_stage: EntryStage;\r\n  hand: Card[];\r\n  dealer: Card[];\r\n  removed_cards: Card[];\r\n  hand_value: HandValue;\r\n  insurance: boolean | null;\r\n  result: ExpectedValues | null;\r\n  hit_card: Card[];\r\n}\r\n\r\nconst initialState: State = {\r\n  entry_stage: EntryStage.Start,\r\n  hand: [],\r\n  dealer: [],\r\n  removed_cards: [],\r\n  hand_value: { soft: false, value: 0 },\r\n  result: null,\r\n  insurance: null,\r\n  hit_card: []\r\n};\r\n\r\nfunction get_current_card_array(state: State) {\r\n  return state.entry_stage === EntryStage.Hand ||\r\n    state.entry_stage === EntryStage.Start\r\n    ? state.hand\r\n    : state.entry_stage === EntryStage.Dealer\r\n    ? state.dealer\r\n    : state.entry_stage === EntryStage.RemovedCards\r\n    ? state.removed_cards\r\n    : state.entry_stage === EntryStage.Hit\r\n    ? state.hit_card\r\n    : null;\r\n}\r\n\r\nfunction reducer(state: State, action: Action) {\r\n  return produce(state, draft => {\r\n    let card_array = get_current_card_array(draft);\r\n\r\n    switch (action.type) {\r\n      case ActionType.CardButton: {\r\n        if (card_array) {\r\n          if (\r\n            (card_array !== draft.dealer && card_array !== draft.hit_card) ||\r\n            card_array.length === 0\r\n          ) {\r\n            card_array.push(action.payload);\r\n          }\r\n        }\r\n        if (draft.entry_stage === EntryStage.Start) {\r\n          draft.entry_stage = EntryStage.Hand;\r\n        }\r\n        break;\r\n      }\r\n      case ActionType.Backspace: {\r\n        if (card_array) {\r\n          card_array.pop();\r\n        }\r\n        break;\r\n      }\r\n      case ActionType.Submit: {\r\n        switch (draft.entry_stage) {\r\n          case EntryStage.Hand:\r\n            draft.entry_stage = EntryStage.Dealer;\r\n            break;\r\n          case EntryStage.Dealer:\r\n            draft.entry_stage = EntryStage.RemovedCards;\r\n            break;\r\n          case EntryStage.RemovedCards:\r\n          case EntryStage.Hit:\r\n            draft.entry_stage = EntryStage.Working;\r\n            break;\r\n        }\r\n        break;\r\n      }\r\n      case ActionType.Reset: {\r\n        return initialState;\r\n      }\r\n      case ActionType.Result: {\r\n        draft.result = action.payload;\r\n        if (draft.result.hit && get_ev_max(draft.result) === draft.result.hit) {\r\n          draft.entry_stage = EntryStage.Hit;\r\n        } else if (draft.result.split !== undefined) {\r\n          draft.entry_stage = EntryStage.ChooseSplit;\r\n        } else {\r\n          draft.entry_stage = EntryStage.Done;\r\n        }\r\n        if (draft.hit_card.length > 0) {\r\n          draft.insurance = null;\r\n          draft.hand.push(draft.hit_card[0]);\r\n          draft.hit_card = [];\r\n        }\r\n      }\r\n    }\r\n\r\n    if (\r\n      draft.dealer[0] === Card.Ace &&\r\n      draft.entry_stage === EntryStage.RemovedCards\r\n    ) {\r\n      draft.insurance =\r\n        take_insurance(draft.hand.concat(draft.dealer, draft.removed_cards)) >=\r\n        1 / 3;\r\n    }\r\n\r\n    draft.hand_value = get_hand_value(draft.hand);\r\n  });\r\n}\r\n\r\ntype WorkerReturn = { data: { ev: ExpectedValues } | { progress: number } };\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  const worker = useRef<any>(null);\r\n  const [progress, setProgress] = useState<number | null>(null);\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  useEffect(() => {\r\n    if (state.entry_stage === EntryStage.Start) {\r\n      if (worker.current) {\r\n        worker.current.terminate();\r\n      }\r\n      worker.current = new Worker();\r\n      worker.current.onmessage = ({ data }: WorkerReturn) =>\r\n        \"progress\" in data\r\n          ? setProgress(data.progress)\r\n          : (dispatch({ type: ActionType.Result, payload: data.ev }),\r\n            setProgress(null));\r\n    } else if (state.entry_stage === EntryStage.Working) {\r\n      if (state.hit_card.length > 0) {\r\n        worker.current.postMessage({\r\n          hit_card: state.hit_card[0]\r\n        });\r\n      } else {\r\n        worker.current.postMessage({\r\n          removed_cards: state.removed_cards,\r\n          hand: state.hand,\r\n          dealer_card: state.dealer[0]\r\n        });\r\n      }\r\n    }\r\n  }, [state]);\r\n  const card_array = get_current_card_array(state);\r\n  const submit_disabled =\r\n    state.entry_stage === EntryStage.Hand\r\n      ? state.hand.length < 2\r\n      : state.entry_stage === EntryStage.Dealer\r\n      ? state.dealer.length < 1\r\n      : state.entry_stage === EntryStage.RemovedCards\r\n      ? false\r\n      : state.entry_stage === EntryStage.Hit\r\n      ? state.hit_card.length < 1\r\n      : true;\r\n  const cards_enabled = merge_valid_maps(\r\n    ...[\r\n      get_valid_cards(state.hand.concat(state.dealer, state.removed_cards)),\r\n      ...(state.entry_stage === EntryStage.Hand && state.hand.length >= 2\r\n        ? [{}]\r\n        : []),\r\n      ...(state.entry_stage === EntryStage.Dealer && state.dealer.length > 0\r\n        ? [{}]\r\n        : []),\r\n      ...(state.entry_stage === EntryStage.Hit\r\n        ? state.hit_card.length > 0\r\n          ? [{}]\r\n          : [get_unbusting_cards(state.hand_value)]\r\n        : []),\r\n      ...(state.entry_stage === EntryStage.Done ? [{}] : [])\r\n    ]\r\n  );\r\n  const instructions =\r\n    state.entry_stage === EntryStage.Hand ||\r\n    state.entry_stage === EntryStage.Start ? (\r\n      \"Enter your initial hand\"\r\n    ) : state.entry_stage === EntryStage.Dealer ? (\r\n      \"Enter dealer's card\"\r\n    ) : state.entry_stage === EntryStage.RemovedCards ? (\r\n      \"Enter any other visible cards\"\r\n    ) : state.entry_stage === EntryStage.Working ? (\r\n      \"Computing...\"\r\n    ) : state.entry_stage === EntryStage.Hit ? (\r\n      \"Enter hit card\"\r\n    ) : (\r\n      <>&nbsp;</>\r\n    );\r\n  const max_result = state.result && get_ev_max(state.result);\r\n  const reset_callback = useCallback(\r\n    () => dispatch({ type: ActionType.Reset }),\r\n    []\r\n  );\r\n  console.log(state.result);\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.display}>\r\n        <Typography\r\n          variant=\"subtitle2\"\r\n          align=\"center\"\r\n          className={classes.instructions}\r\n        >\r\n          {instructions}\r\n        </Typography>\r\n        <div className={classes.displayInner}>\r\n          <CardEntry\r\n            hand={state.hand.concat(state.hit_card)}\r\n            dealer={state.dealer}\r\n            other={state.removed_cards}\r\n            active={\r\n              state.entry_stage === EntryStage.Start ||\r\n              state.entry_stage === EntryStage.Hand ||\r\n              state.entry_stage === EntryStage.Hit\r\n                ? \"hand\"\r\n                : state.entry_stage === EntryStage.Dealer\r\n                ? \"dealer\"\r\n                : state.entry_stage === EntryStage.RemovedCards\r\n                ? \"other\"\r\n                : undefined\r\n            }\r\n          />\r\n          {progress ? (\r\n            <div className={classes.progressDiv}>\r\n              <CircularProgress\r\n                variant=\"static\"\r\n                color=\"inherit\"\r\n                value={Math.round(progress * 100)}\r\n              />\r\n            </div>\r\n          ) : (\r\n            <ResultDisplay result={state.result} insurance={state.insurance} />\r\n          )}\r\n        </div>\r\n        {state.entry_stage !== EntryStage.Hand &&\r\n          state.entry_stage !== EntryStage.Start && (\r\n            <Button\r\n              className={classes.reset}\r\n              color=\"inherit\"\r\n              onClick={reset_callback}\r\n            >\r\n              Reset <Replay style={{ paddingLeft: 8 }} />\r\n            </Button>\r\n          )}\r\n      </div>\r\n      <EntryPad\r\n        onCardClick={useCallback(\r\n          card => dispatch({ type: ActionType.CardButton, payload: card }),\r\n          []\r\n        )}\r\n        cardsEnabled={cards_enabled}\r\n        onBackspaceClick={useCallback(\r\n          () => dispatch({ type: ActionType.Backspace }),\r\n          []\r\n        )}\r\n        backspaceEnabled={card_array !== null && card_array.length > 0}\r\n        onSubmitClick={useCallback(\r\n          () => dispatch({ type: ActionType.Submit }),\r\n          []\r\n        )}\r\n        submitEnabled={!submit_disabled}\r\n        classes={{ root: classes.entryPad }}\r\n      />\r\n      {fullScreen && <div style={{ height: 32 }} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}